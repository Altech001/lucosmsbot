"""
Beautiful anime-style menus with inline keyboards
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Tuple

class AnimeMenus:
    """Creates beautiful anime-style menus and keyboards"""
    
    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """Main menu with anime styling"""
        keyboard = [
            [
                InlineKeyboardButton("üé¨ YouTube", callback_data="youtube_menu"),
                InlineKeyboardButton("üì∫ Movies", callback_data="movies_menu")
            ],
            [
                InlineKeyboardButton("üé® AI Art", callback_data="ai_menu"),
                InlineKeyboardButton("üìÅ Backup", callback_data="backup_menu")
            ],
            [
                InlineKeyboardButton("üë§ Account", callback_data="account_menu"),
                InlineKeyboardButton("‚öôÔ∏è Admin", callback_data="admin_menu")
            ],
            [
                InlineKeyboardButton("‚ùì Help", callback_data="help_menu"),
                InlineKeyboardButton("üìä Stats", callback_data="stats_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def youtube_menu() -> InlineKeyboardMarkup:
        """YouTube download menu"""
        keyboard = [
            [
                InlineKeyboardButton("üîç Search", callback_data="youtube_search"),
                InlineKeyboardButton("üì• Download", callback_data="youtube_download")
            ],
            [
                InlineKeyboardButton("üéµ Audio Only", callback_data="youtube_audio"),
                InlineKeyboardButton("üìπ Video HD", callback_data="youtube_hd")
            ],
            [
                InlineKeyboardButton("üì± Video SD", callback_data="youtube_sd"),
                InlineKeyboardButton("üìã Playlist", callback_data="youtube_playlist")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def movies_menu() -> InlineKeyboardMarkup:
        """Movies and TV shows menu"""
        keyboard = [
            [
                InlineKeyboardButton("üé¨ Latest Movies", callback_data="movies_latest"),
                InlineKeyboardButton("üî• Trending", callback_data="movies_trending")
            ],
            [
                InlineKeyboardButton("üì∫ TV Shows", callback_data="movies_tv"),
                InlineKeyboardButton("üåü Anime", callback_data="movies_anime")
            ],
            [
                InlineKeyboardButton("üîç Search Movies", callback_data="movies_search"),
                InlineKeyboardButton("üíé Premium", callback_data="movies_premium")
            ],
            [
                InlineKeyboardButton("üì± Telegram Groups", callback_data="movies_groups"),
                InlineKeyboardButton("üéØ Categories", callback_data="movies_categories")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def ai_menu() -> InlineKeyboardMarkup:
        """AI and image generation menu"""
        keyboard = [
            [
                InlineKeyboardButton("üé® Generate Art", callback_data="ai_generate"),
                InlineKeyboardButton("üñºÔ∏è Analyze Image", callback_data="ai_analyze")
            ],
            [
                InlineKeyboardButton("üòä Make Sticker", callback_data="ai_sticker"),
                InlineKeyboardButton("‚ú® Text Sticker", callback_data="ai_text_sticker")
            ],
            [
                InlineKeyboardButton("üå∏ Anime Style", callback_data="ai_anime"),
                InlineKeyboardButton("üé≠ Cartoon Style", callback_data="ai_cartoon")
            ],
            [
                InlineKeyboardButton("üîÆ Fantasy", callback_data="ai_fantasy"),
                InlineKeyboardButton("ü§ñ Cyberpunk", callback_data="ai_cyberpunk")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def backup_menu() -> InlineKeyboardMarkup:
        """File backup menu"""
        keyboard = [
            [
                InlineKeyboardButton("üì§ Upload File", callback_data="backup_upload"),
                InlineKeyboardButton("üíæ My Backups", callback_data="backup_list")
            ],
            [
                InlineKeyboardButton("üóÇÔ∏è File Manager", callback_data="backup_manage"),
                InlineKeyboardButton("üîó Get Links", callback_data="backup_links")
            ],
            [
                InlineKeyboardButton("‚ö° Quick Upload", callback_data="backup_quick"),
                InlineKeyboardButton("üìä Storage Info", callback_data="backup_info")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def account_menu() -> InlineKeyboardMarkup:
        """Account management menu"""
        keyboard = [
            [
                InlineKeyboardButton("üë§ My Profile", callback_data="account_profile"),
                InlineKeyboardButton("üí∞ Balance", callback_data="account_balance")
            ],
            [
                InlineKeyboardButton("üìà Usage Stats", callback_data="account_stats"),
                InlineKeyboardButton("‚öôÔ∏è Settings", callback_data="account_settings")
            ],
            [
                InlineKeyboardButton("üîê Security", callback_data="account_security"),
                InlineKeyboardButton("üì± Devices", callback_data="account_devices")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def admin_menu() -> InlineKeyboardMarkup:
        """Admin panel menu"""
        keyboard = [
            [
                InlineKeyboardButton("üë• User Management", callback_data="admin_users"),
                InlineKeyboardButton("üí≥ Recharge", callback_data="admin_recharge")
            ],
            [
                InlineKeyboardButton("üìä System Stats", callback_data="admin_stats"),
                InlineKeyboardButton("üîß Bot Config", callback_data="admin_config")
            ],
            [
                InlineKeyboardButton("üìù Logs", callback_data="admin_logs"),
                InlineKeyboardButton("üîÑ Restart", callback_data="admin_restart")
            ],
            [
                InlineKeyboardButton("üö® Alerts", callback_data="admin_alerts"),
                InlineKeyboardButton("üõ†Ô∏è Maintenance", callback_data="admin_maintenance")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def quality_menu() -> InlineKeyboardMarkup:
        """Video quality selection menu"""
        keyboard = [
            [
                InlineKeyboardButton("üé¨ Best Quality", callback_data="quality_best"),
                InlineKeyboardButton("üì∫ HD (720p)", callback_data="quality_hd")
            ],
            [
                InlineKeyboardButton("üì± SD (480p)", callback_data="quality_sd"),
                InlineKeyboardButton("üéµ Audio Only", callback_data="quality_audio")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="youtube_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def movie_groups_menu() -> InlineKeyboardMarkup:
        """Movie Telegram groups menu"""
        keyboard = [
            [
                InlineKeyboardButton("üé¨ VJ Junior", callback_data="group_vjjunior"),
                InlineKeyboardButton("üî• Latest Movies", callback_data="group_latest")
            ],
            [
                InlineKeyboardButton("üì∫ TV Series", callback_data="group_tv"),
                InlineKeyboardButton("üåü Anime Hub", callback_data="group_anime")
            ],
            [
                InlineKeyboardButton("üíé Premium Groups", callback_data="group_premium"),
                InlineKeyboardButton("üîç Search Groups", callback_data="group_search")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="movies_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def anime_styles_menu() -> InlineKeyboardMarkup:
        """Anime art styles menu"""
        keyboard = [
            [
                InlineKeyboardButton("üå∏ Kawaii", callback_data="style_kawaii"),
                InlineKeyboardButton("‚öîÔ∏è Shounen", callback_data="style_shounen")
            ],
            [
                InlineKeyboardButton("üíï Shoujo", callback_data="style_shoujo"),
                InlineKeyboardButton("üåô Magical Girl", callback_data="style_magical")
            ],
            [
                InlineKeyboardButton("üî• Action", callback_data="style_action"),
                InlineKeyboardButton("üé≠ Chibi", callback_data="style_chibi")
            ],
            [
                InlineKeyboardButton("üîô Back", callback_data="ai_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def confirmation_menu(action: str) -> InlineKeyboardMarkup:
        """Confirmation menu for important actions"""
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ Yes", callback_data=f"confirm_{action}"),
                InlineKeyboardButton("‚ùå No", callback_data=f"cancel_{action}")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def pagination_menu(current_page: int, total_pages: int, prefix: str) -> InlineKeyboardMarkup:
        """Pagination menu for long lists"""
        keyboard = []
        
        # Page navigation
        nav_row = []
        if current_page > 1:
            nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è Prev", callback_data=f"{prefix}_page_{current_page-1}"))
        
        nav_row.append(InlineKeyboardButton(f"üìÑ {current_page}/{total_pages}", callback_data="current_page"))
        
        if current_page < total_pages:
            nav_row.append(InlineKeyboardButton("Next ‚û°Ô∏è", callback_data=f"{prefix}_page_{current_page+1}"))
        
        keyboard.append(nav_row)
        
        # Jump to page
        if total_pages > 3:
            keyboard.append([
                InlineKeyboardButton("üî¢ Go to Page", callback_data=f"{prefix}_goto"),
                InlineKeyboardButton("üîÑ Refresh", callback_data=f"{prefix}_refresh")
            ])
        
        keyboard.append([InlineKeyboardButton("üîô Back", callback_data="main_menu")])
        
        return InlineKeyboardMarkup(keyboard)

# Menu text templates with anime styling
MENU_TEXTS = {
    "welcome": """
üåü **Welcome to Luco Bot!** üåü

‚ú® Your magical assistant for Recharge, downloads, AI art, and more!

**üéØ What can I do?**
‚Ä¢ üé¨ Download YouTube videos & music
‚Ä¢ üì∫ Find movies from Telegram groups  
‚Ä¢ üé® Generate beautiful AI artwork
‚Ä¢ üòä Create custom stickers
‚Ä¢ üìÅ Backup your files securely
‚Ä¢ üë§ Manage your account

**Choose an option below to get started!** ‚≠ê
    """,
    
    "youtube": """
üé¨ **YouTube Downloader** üì•

**Available Options:**
‚Ä¢ üîç Search for videos
‚Ä¢ üì• Download by URL
‚Ä¢ üéµ Audio-only downloads
‚Ä¢ üìπ HD/SD video options
‚Ä¢ üìã Playlist support

**Just send me a YouTube URL or search for content!** ‚ú®
    """,
    
    "ai_art": """
üé® **AI Art Studio** ‚ú®

**Create amazing artwork with AI:**
‚Ä¢ üå∏ Anime-style illustrations
‚Ä¢ üé≠ Cartoon characters
‚Ä¢ üîÆ Fantasy scenes
‚Ä¢ ü§ñ Cyberpunk art
‚Ä¢ üòä Convert images to stickers

**Send me a description and watch the magic happen!** üåü
    """,
    
    "movies": """
üé¨ **Movie & TV Hub** üì∫

**Find the latest content:**
‚Ä¢ üî• Trending movies
‚Ä¢ üì∫ TV series & anime
‚Ä¢ üåü Premium content
‚Ä¢ üì± Telegram movie groups
‚Ä¢ üéØ Search by category

**Your entertainment center awaits!** ‚ú®
    """
}